worker_processes 1;

events { worker_connections 1024; }

http {
    # Define the upstream group for load balancing between Service1 instances
    upstream service1_backend {
        server service1-1:8199;
        server service1-2:8199;
        server service1-3:8199;
    }

    server {
        listen 80;

        # Basic authentication
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Serve the main interface (index.html)
        location / {
            root /usr/share/nginx/html;  # NGINX's default HTML directory
            index index.html;
        }

        # Proxy requests to Service1 load-balanced instances
        location /service1 {
            proxy_pass http://service1_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Add CORS headers
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";

            # Handle preflight requests for CORS (optional but recommended for certain browsers)
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Proxy requests to the stop service to shut down all containers
        location /stop {
            proxy_pass http://stop_service:5000;  # Assuming the stop service runs on port 5000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: handle favicon.ico to avoid 404 errors in the logs
        location /favicon.ico {
            log_not_found off;
            access_log off;
        }
    }
}
